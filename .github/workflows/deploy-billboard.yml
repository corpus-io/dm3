name: Staging billboard deploy
on: push

jobs:
    messenger-demo-deploy:
        runs-on: ubuntu-latest
        # if: ${{ contains( github.ref, vars.STAGING_BRANCH) }}
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v3
              with:
                  registry-url: 'https://npm.pkg.github.com'
                  node-version: 18.0.0
                  cache: 'yarn'
            - name: Declare some variables
              shell: bash
              run: |
                echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
                echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> "$GITHUB_ENV"
                echo "now=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV
            - name: Prepare SSH
              run: |
                  mkdir ~/.ssh
                  echo "${{ secrets.STAGING_HOST_SSH_BILLBOARD }}" > ~/.ssh/known_hosts
                  echo "${{ secrets.DO_SSH_KEY }}" > ./ssh-key
                  chmod 600 ./ssh-key
            - name: Create .env file
              env:
                  TARGET_HOST: ${{ secrets.STAGING_HOST_BILLBOARD }}
              run: |
                  echo "REACT_APP_ADDR_ENS_SUBDOMAIN=.bb-addr.dm3.eth" >> ./.env.react
                  echo "REACT_APP_BACKEND=http://${{ secrets.STAGING_HOST_BILLBOARD }}/api" >> ./.env.react
                  echo "REACT_APP_DEFAULT_DELIVERY_SERVICE=beta-ds.dm3.eth" >> ./.env.react
                  echo "REACT_APP_DEFAULT_SERVICE=http://${{ secrets.STAGING_HOST_BILLBOARD }}/api" >> ./.env.react
                  echo "REACT_APP_ETHEREUM_PROVIDER=${{ secrets.REACT_APP_ETHEREUM_PROVIDER }}" >> ./.env.react
                  echo "REACT_APP_PROFILE_BASE_URL=http://${{ secrets.STAGING_HOST_BILLBOARD }}/api" >> ./.env.react
                  echo "REACT_APP_RESOLVER_BACKEND=http://${{ secrets.STAGING_HOST_BILLBOARD }}/resolver-handler" >> ./.env.react
                  echo "REACT_APP_USER_ENS_SUBDOMAIN=.beta-user.dm3.eth" >> ./.env.react
                  echo "REACT_APP_WALLET_CONNECT_PROJECT_ID=${{ secrets.REACT_APP_WALLET_CONNECT_PROJECT_ID }}" >> ./.env.react
                  echo "REACT_APP_COMMIT_HASH=${{ env.sha_short }}" >> ./.env.react
                  echo "REACT_APP_BRANCH=${{ env.branch }}" >> ./.env.react
                  echo "REACT_APP_BUILD_TIME=${{ env.now }}" >> ./.env.react
                  cat ./.env.react >> ./.env
                  echo "BILLBOARD_SIGNER_PRIVATE_KEY=${{ secrets.BILLBOARD_SIGNER_PRIVATE_KEY }}" >> ./.env
                  echo "RESOLVER_ADDR=0xae6646c22D8eE6479eE0a39Bf63B9bD9e57bAD9d" >> ./.env
                  echo "SIGNING_PUBLIC_KEY=${{ secrets.SIGNING_PUBLIC_KEY }}" >> ./.env
                  echo "SIGNING_PRIVATE_KEY=${{ secrets.SIGNING_PRIVATE_KEY }}" >> ./.env
                  echo "SIGNER_PRIVATE_KEY=${{ secrets.SIGNER_PRIVATE_KEY }}" >> ./.env
                  echo "SPAM_PROTECTION=${{ secrets.SPAM_PROTECTION }}" >> ./.env
                  echo "ENCRYPTION_PUBLIC_KEY=${{ secrets.ENCRYPTION_PUBLIC_KEY }}" >> ./.env
                  echo "ENCRYPTION_PRIVATE_KEY=${{ secrets.ENCRYPTION_PRIVATE_KEY }}" >> ./.env
                  echo "RPC=${{ secrets.STAGING_RPC }}" >> ./.env
                  echo "BILLBOARD_PRIVATE_KEY=${{ secrets.BILLBOARD_PRIVATE_KEY }}" >> ./.env
                  echo "interceptor=${{ secrets.INTERCEPTOR }}" >> ./.env
                  echo "DISABLE_SESSION_CHECK='true'" >> ./.env
                  echo "BILLBOARD_NAMES=${{ secrets.BILLBOARD_NAMES }}" >> ./.env
                  envsubst '${SSL_CERTIFICATE_BASE_LOC} ${TLS_CERTIFICATE_LOCATION} ${TARGET_HOST}' < ./docker/billboard/nginx.conf > ./nginx.conf
                  cat ./.env
            - name: Build docker image
              run: |
                  cp ./.env.react packages/messenger-demo/.env
                  docker build --progress=plain -t dm3-backend:latest -f ./docker/Dockerfile .
                  docker save -o ./dm3-backend.tar dm3-backend:latest
            - name: Sync files
              run: |
                  rsync -avz -e 'ssh -i ./ssh-key' ./.env app@${{ secrets.STAGING_HOST_BILLBOARD }}:/home/app/dm3
                  rsync -avz -e 'ssh -i ./ssh-key' ./dm3-backend.tar app@${{ secrets.STAGING_HOST_BILLBOARD }}:/home/app/dm3 
                  rsync -avz -e 'ssh -i ./ssh-key' ./nginx.conf app@${{ secrets.STAGING_HOST_BILLBOARD }}:/home/app/dm3
                  rsync -avz -e 'ssh -i ./ssh-key' ./docker/billboard/docker-compose.yml app@${{ secrets.STAGING_HOST_BILLBOARD }}:/home/app/dm3
            - name: Prepare docker
              run: |
                  ssh -i ./ssh-key app@${{ secrets.STAGING_HOST_BILLBOARD }} "\
                  cd dm3 && docker compose down && docker system prune -af"
                  ssh -i ./ssh-key root@${{ secrets.STAGING_HOST_BILLBOARD }} "\
                  systemctl restart docker.service"
            - name: Load docker image
              run: |
                  ssh -i ./ssh-key app@${{ secrets.STAGING_HOST_BILLBOARD }} "\
                  cd dm3 && docker load -i dm3-backend.tar; \
                  rm dm3-backend.tar || true"
            - name: Firewall config
              run: |
                  ssh -i ./ssh-key root@${{ secrets.STAGING_HOST_BILLBOARD }} "\
                  ufw allow from 172.18.0.1/16 proto tcp to ${{ secrets.STAGING_HOST_BILLBOARD }} port 80"
            - name: Start
              run: |
                  ssh -i ./ssh-key app@${{ secrets.STAGING_HOST_BILLBOARD }} "\
                  cd dm3 && docker compose --env-file .env up -d"
